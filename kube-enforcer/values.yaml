# Specifies the secret data for imagePullSecrets needed to fetch the private docker images
imageCredentials:
  # If aqua-registry already exists in the cluster. Make create to false. So it won't attempt to create a new registry secret. 
  create: true
  name: aqua-registry-secret # example
  repositoryUriPrefix: "registry.aquasec.com" # for dockerhub - "docker.io"
  registry: "registry.aquasec.com" #REQUIRED only if create is true, for dockerhub - "index.docker.io/v1/"
  username: ""
  password: ""
  email: "example@gmail.com"

vaultSecret:
  enabled: true   #enable this once you have secrets in vault and annotations are enabled

annotations:
  vault.hashicorp.com/agent-inject: "true"
  vault.hashicorp.com/agent-inject-status: update
  vault.hashicorp.com/role: "aqua-sa"                            # specify your role used by vault agent auto-auth
  vault.hashicorp.com/agent-inject-secret-db: secret/db  #specify your vault secrets path
  #Add the secrets in Key Value pair as environment variable/ below is the example for adding DBPASSWORD in environmental variable
  vault.hashicorp.com/agent-inject-template-db: |        
    {{- with secret "secret/db" -}} 
    export AQUA_TOKEN={{ .Data.data.aqua_token}}
    {{- end -}}

args:
  - /bin/sh
  - -c
  - source /vault/secrets/db && ./kubenf     # change the /vault/secrets/<filename> as per the setup

managed: false
environment: aws # aws, acs, onprem

aqua_enable_cache: yes
aqua_cache_expiration_period: 60

image:
  repository: kube-enforcer
  tag: "5.3"
  pullPolicy: Always

nameOverride: "aqua-kube-enforcer"
fullnameOverride: "aqua-kube-enforcer"

namespace: "aqua"

logLevel:

certsSecret:
  name: aqua-kube-enforcer-certs
  serverCertificate: ""
  serverKey: ""

aquaSecret:
  name: aqua-kube-enforcer-token
  kubeEnforcerToken: ""

envs:
  gatewayAddress: aqua-gateway-svc.aqua:8443 


serviceAccount:
  name: aqua-kube-enforcer-sa

clusterRole:
  name: aqua-kube-enforcer

clusterRoleBinding:
  name: aqua-kube-enforcer  

role:
  name: aqua-kube-enforcer

roleBinding:
  name: aqua-kube-enforcer 

webhooks:
  caBundle: ""
  failurePolicy: Ignore
  validatingWebhook:
    name: kube-enforcer-admission-hook-config
  mutatingWebhook:
    name: kube-enforcer-me-injection-hook-config

livenessProbe:
  tcpSocket:
    port: 8080
  initialDelaySeconds: 60
  periodSeconds: 30

readinessProbe:
  tcpSocket:
    port: 8080
  initialDelaySeconds: 60
  periodSeconds: 30